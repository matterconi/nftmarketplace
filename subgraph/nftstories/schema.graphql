type AdminAddressSet @entity(immutable: true) {
  id: Bytes!
  adminAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BatchMetadataUpdate @entity(immutable: true) {
  id: Bytes!
  _fromTokenId: BigInt! # uint256
  _toTokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FeesWithdrawn @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FundsWithdrawn @entity(immutable: true) {
  id: Bytes!
  seller: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MarketItemBurned @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  owner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MarketItemCreated @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  seller: Bytes! # address
  owner: Bytes! # address
  price: BigInt! # uint256
  sold: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MarketItemPriceUpdated @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  seller: Bytes! # address
  newPrice: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MarketItemRelisted @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  seller: Bytes! # address
  price: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MarketItemRemoved @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  seller: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MarketItemSold @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  seller: Bytes! # address
  buyer: Bytes! # address
  price: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MarketItemTransferred @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  from: Bytes! # address
  to: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MarketplaceAddressSet @entity(immutable: true) {
  id: Bytes!
  marketplaceAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MetadataUpdate @entity(immutable: true) {
  id: Bytes!
  _tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokenCreated @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  owner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
